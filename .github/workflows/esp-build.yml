# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build and Publish Application

on:
  push:
    tags:
      - "*"
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    defaults:
      run:
        working-directory: 'esp32'
    strategy:
      fail-fast: false
      matrix:
        # The version names here correspond to the versions of espressif/idf Docker image.
        # See https://hub.docker.com/r/espressif/idf/tags and
        # https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/tools/idf-docker-image.html
        # for details.
        idf_ver: ["release-v5.2"]
        idf_target: ["esp32"]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: ${{ matrix.idf_ver }}
        target: ${{ matrix.idf_target }}
        path: '${{ matrix.idf_target }}'

    - name: Rename artifact
      run: |
        cp build/bootloader/bootloader.bin bootloader.bin
        cp build/partition_table/partition-table.bin partition-table.bin
        [ -e build/ota_data_initial.bin ] && cp build/ota_data_initial.bin ota_data_initial.bin || echo "ota_data_initial is not found"
        cp build/ESP_NES.bin firmware.bin

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
          name: nes-${{ matrix.idf_target }}
          path: "${{ matrix.idf_target }}/*.bin"

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Firmware Files
        uses: actions/download-artifact@v4
        with:
          path: build
